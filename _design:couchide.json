{
 "comment": "This is the CouchIDE design doc, when placed in a database it creates a sort of webserver for you. Documentation at: https://github.com/vhv/CouchIDE",
 "version": "0.2",
 "_id": "_design/couchide",
 "views": {
 "type-doc": {
 "map": "function(doc) { emit(doc.type, doc) }"
 }
 },
 "rewrites": [
   {
     "from": "/couchide",
     "to": "couch.ide"
   },
   {
     "from": "/couchide/*",
     "to": "couch.ide"
   },
   {
     "from": "/",
     "to": "_show/render/index.html"
   },
   {
     "from": "/_session/",
     "to": "../../../_session/"
   },
   {
     "from": "/api/",
     "to": "../../../"
   },
   {
     "from": "/*",
     "to": "_show/render/*"
   }
 ],
 "shows": {
   "render": "function(doc, req) { return { \"headers\": { \"Content-Type\": doc.type }, \"body\": doc.body } }"
  },
  "_attachments": {
    "couch.ide": {
      "content_type": "text/html",
      "data": ""
    }
  }
}